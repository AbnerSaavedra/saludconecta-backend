// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Paciente {
  id              Int      @id @default(autoincrement())
  cedula          String   @unique
  nombre          String
  apellido        String
  fechaNacimiento DateTime
  telefono        String?
  correo          String?
  direccion       String?
  creadoEn        DateTime @default(now())
  actualizadoEn   DateTime @updatedAt

  // üîÅ Relaciones inversas
  citas          Cita[]
  odontogramas   Odontograma[]
  intervenciones Intervencion[]
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  roles     Role[]
  name      String
  specialty String?
  telefono       String?  // opcional
  direccion      String?  // opcional
  fechaNacimiento DateTime? // opcional, √∫til para validaci√≥n de edad
  estado         EstadoUsuario   @default(Activo) // 'Activo' | 'Suspendido'
  createdAt DateTime @default(now())

  // üîÅ Relaciones inversas
  odontograma    Odontograma[]
  citas          Cita[]
  intervenciones Intervencion[]
}

enum Role {
  ADMIN
  MEDICO
  ASISTENTE
}

enum EstadoUsuario {
  Activo
  Suspendido
}


model Odontograma {
  id                  String   @id @default(uuid())
  pieza               String
  cuadrante           String?
  estado              String
  tratamientoSugerido String   // ‚úÖ Nuevo nombre sem√°ntico
  fecha               DateTime
  pacienteId          Int
  usuarioId           String
  createdAt           DateTime @default(now())

  paciente            Paciente @relation(fields: [pacienteId], references: [id])
  usuario             User     @relation(fields: [usuarioId], references: [id])
  intervenciones      Intervencion[]
}

model Cita {
  id           String   @id @default(uuid())
  fecha        DateTime
  hora         String
  motivo       String?
  estado       String   @default("PENDIENTE")
  especialidad String
  usuarioId    String
  pacienteId   Int
  usuario      User     @relation(fields: [usuarioId], references: [id])
  paciente     Paciente @relation(fields: [pacienteId], references: [id])
  createdAt    DateTime @default(now())
}

model Intervencion {
  id                  String   @id @default(uuid())
  tipo                String?
  diagnostico         String
  tratamientoRealizado String?  // ‚úÖ Nuevo nombre sem√°ntico
  fecha               DateTime
  observaciones       String?
  creadoEn            DateTime @default(now())

  pacienteId          Int
  usuarioId           String
  odontogramaId       String

  paciente            Paciente     @relation(fields: [pacienteId], references: [id])
  usuario             User         @relation(fields: [usuarioId], references: [id])
  odontograma         Odontograma  @relation(fields: [odontogramaId], references: [id])
}

